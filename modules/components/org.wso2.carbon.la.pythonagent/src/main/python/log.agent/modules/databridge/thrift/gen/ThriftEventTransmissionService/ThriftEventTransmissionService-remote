# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

import sys
import pprint
from urlparse import urlparse

from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol
from ThriftEventTransmissionService import ThriftEventTransmissionService
from ThriftEventTransmissionService.ttypes import *


if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string defineStream(string sessionId, string streamDefinition)'
  print '  string findStreamId(string sessionId, string streamName, string streamVersion)'
  print '  void publish(ThriftEventBundle eventBundle)'
  print '  bool deleteStreamById(string sessionId, string streamId)'
  print '  bool deleteStreamByNameVersion(string sessionId, string streamName, string streamVersion)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ThriftEventTransmissionService.Client(protocol)
transport.open()

if cmd == 'defineStream':
  if len(args) != 2:
    print 'defineStream requires 2 args'
    sys.exit(1)
  pp.pprint(client.defineStream(args[0],args[1],))

elif cmd == 'findStreamId':
  if len(args) != 3:
    print 'findStreamId requires 3 args'
    sys.exit(1)
  pp.pprint(client.findStreamId(args[0],args[1],args[2],))

elif cmd == 'publish':
  if len(args) != 1:
    print 'publish requires 1 args'
    sys.exit(1)
  pp.pprint(client.publish(eval(args[0]),))

elif cmd == 'deleteStreamById':
  if len(args) != 2:
    print 'deleteStreamById requires 2 args'
    sys.exit(1)
  pp.pprint(client.deleteStreamById(args[0],args[1],))

elif cmd == 'deleteStreamByNameVersion':
  if len(args) != 3:
    print 'deleteStreamByNameVersion requires 3 args'
    sys.exit(1)
  pp.pprint(client.deleteStreamByNameVersion(args[0],args[1],args[2],))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
